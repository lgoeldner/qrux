mal
str
((println 20))
(eval mal)
(eval (+ 20 39))
(eval (read-string "(println \"i was read\")"))
(def! hello (20 39 +))
hello
(println "hello \n")
(prn "hello")
(println "hello \n")
nil
(trace)
nil
"hello"
(count (hello))
(count (list 100 300))
(+ 10 (count (list 100 300)))
(prn "hello")
(prn ("hello" 20 39 ))
(not true)
load_file
(load_file)
load_file
prn
(prn)
(str ("hello" help))
(str ("hello"))
lf
(println lf)
lf
(println lf)
(nil)
nil
true
false
nil
"fel"
fel
lf test.qx
lf "test.qx"
(lf "test.qx")
(eval (lf "test.qx"))
(lf test.qx)
(lf "test.qx")
nil 20
(20 39)
nil 20
(lf "test.qx")
(eval (read-string "(println 20) (+ 20 39)"))
