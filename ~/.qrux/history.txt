(def! a 3)
(def! a )
(def! a a a)
(def! a )
(def!)
(empty? ())
(empty? )
(=)
(= 1)
(= 1 40)
(fn* (a) (fn* (b) (= a b)))
(def! eq (fn* (a) (fn* (b) (= a b))))
(def! =0 (eq 0))
(=0 0)
(=0 1)
((eq 1) 2)
((eq 1) 1)
(= 1 2)
(= 1 1)
(prn)
(def! a b)
(def! a 10)
(def! a n)
(def! a)
(def! )
(def! a)
(def! a 20)
(= 1 2)
(fn* (a) (fn* (b) (= a b)))
(def! var (fn* (a) (fn* (b) (= a b))))
((var 3) 1)
((var 3) 3)
(let* (l (list 10 300 "string")) (and (list? l) (not (empty? l)) )
(def! and ( fn* (f s) if f (if s true false) false))
(def! and ( fn* (f s) (if f (if s true false) false)))
(and (= 0 0) (true))
(and (= 0 0) true)
(true)
(true "heks")
(let* (l (list 10 300 "string")) (and (list? l) (not (empty? l)) )
(true "heks")
(let* a)
(let* () 10)
(let* (a 39) (* 2 a))
(def! a 2)
(let* (a 39) (* 2 a))
89102
(def! sq (fn* (a) (* a a)))
(sq 10)
(sq 999999999999999999)
